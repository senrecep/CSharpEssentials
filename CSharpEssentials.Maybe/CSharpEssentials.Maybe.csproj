<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!-- Package-specific metadata -->
    <PackageId>CSharpEssentials.Maybe</PackageId>
    <Title>CSharpEssentials.Maybe</Title>
    <Product>CSharpEssentials.Maybe</Product>
    <Description>
      Maybe monad implementation with LINQ support for functional programming in C#.
      Provides type-safe null handling, eliminates null reference exceptions, and enables functional
      composition.
      Essential for functional programming patterns and safe value handling.
    </Description>
    <PackageTags>
      Maybe,Monad,FunctionalProgramming,NullSafety,LINQ,Optional,CSharpEssentials
    </PackageTags>
    <PackageIcon>icon.png</PackageIcon>
    <PackageReadmeFile>README.MD</PackageReadmeFile>

    <!-- Publishing settings -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <DebugType>embedded</DebugType>
  </PropertyGroup>

  <!-- Package content -->
  <ItemGroup>
    <None Include="..\icon.png" Pack="true" PackagePath="\" />
    <None Include="..\README.MD" Pack="true" PackagePath="\" />
    <None Include="..\LICENCE" Pack="true" PackagePath="\" />
  </ItemGroup>

  <!-- Dependencies: Maybe depends on Results and Errors -->
  <ItemGroup>
    <PackageReference Include="CSharpEssentials.Results" Version="[2.0.6]"
      Condition="'$(UseProjectReferences)' != 'true'" />
    <PackageReference Include="CSharpEssentials.Errors" Version="[2.0.6]"
      Condition="'$(UseProjectReferences)' != 'true'" />

    <ProjectReference Include="..\CSharpEssentials.Results\CSharpEssentials.Results.csproj"
      Condition="'$(UseProjectReferences)' == 'true'" />
    <ProjectReference Include="..\CSharpEssentials.Errors\CSharpEssentials.Errors.csproj"
      Condition="'$(UseProjectReferences)' == 'true'" />
  </ItemGroup>

</Project>